<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		   http://www.springframework.org/schema/security
		   http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 支持方法注解 @Secured -->
	<global-method-security jsr250-annotations="enabled" secured-annotations="enabled" pre-post-annotations="enabled"/>

	<!-- Spring-Security 的配置 -->
	<http pattern="/common/**" security="none"/>
	<http pattern="/layout/**" security="none"/>
	<http pattern="/plugins/**" security="none"/>
	<http pattern="/account/**" security="none"/>
	<http pattern="/func/**" security="none"/>
	<http pattern="/index.jsp" security="none"/>
	<http pattern="/home/show" security="none"/>
	<http pattern="/homePage.html" security="none"/>
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/homeImpress/**" access="permitAll"/>
		<!-- <intercept-url pattern="/**" access="hasRole('ROLE_USER')"/> -->
		
		<form-login login-page="/account/loginPage" authentication-failure-url="/account/loginPage" default-target-url="/homePage" always-use-default-target="true"/>
		
		<logout invalidate-session="true" logout-success-url="/account/logout" logout-url="/homePage" delete-cookies="JSESSIONID"/>
		<!-- 检测失效的sessionId,超时时定位到另外一个URL -->
		<session-management invalid-session-url="/account/logout"/>
	</http>

	<!-- 指定一个自定义的authentication-manager -->
	<authentication-manager>
		<authentication-provider user-service-ref="securityUserService">
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<!-- 对密码进行MD5编码 -->
	<beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>

	<!-- 通过 securityUserService,Spring会自动的用户的访问级别. 也可以理解成:以后我们和数据库操作就是通过securityUserService来进行关联. -->
	<beans:bean id="securityUserService" class="com.dragon.common.serurity.UserDetailsServiceImpl"/>
	
	<!-- 国际化 -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<beans:property name="basename" value="classpath:org/springframework/security/messages_zh_CN"></beans:property>
	</beans:bean>

	<!-- 事件监听:实现了 ApplicationListener监听接口，包括AuthenticationCredentialsNotFoundEvent 
		事件， AuthorizationFailureEvent事件，AuthorizedEvent事件， PublicInvocationEvent事件 -->
	<beans:bean class="org.springframework.security.authentication.event.LoggerListener"/>

</beans:beans>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">


	<!-- 启动对@Aspectj的支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 注解扫描包 -->
	<context:component-scan base-package="com.hotel.controller" />
	<!-- Spring为我们提供了一种极为方便注册这些BeanPostProcessor的方式， 即使用<context:annotation- 
		config/>隐式地向 Spring容器注册 AutowiredAnnotationBeanPostProcessor、 RequiredAnnotationBeanPostProcessor、 
		CommonAnnotationBeanPostProcessor以及 PersistenceAnnotationBeanPostProcessor这4个BeanPostProcessor -->

	<!-- <mvc:annotation-driven /> 是一种简写形式, 会自动注册DefaultAnnotationHandlerMapping与 
		AnnotationMethodHandlerAdapter 两个bean, 是spring MVC为@Controllers分发请求所必须的 -->
	<mvc:annotation-driven />

	<!-- 静态资源的访问 -->
	<mvc:resources location="/plugins/" mapping="/plugins/**" />
	<mvc:resources location="/common/" mapping="/common/**" />
	<mvc:resources location="/layout/" mapping="/layout/**" />

	<!-- 返回JSON模版 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
			</list>
		</property>
	</bean>

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

</beans>